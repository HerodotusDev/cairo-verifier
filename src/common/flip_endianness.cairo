use cairo_verifier::common::array_append::ArrayAppendTrait;

trait FlipEndiannessTrait<F> {
    fn flip_endianness(self: F) -> F;
}

impl FlipEndiannessU32 of FlipEndiannessTrait<u32> {
    fn flip_endianness(self: u32) -> u32 {
        (self % 256) * 16777216
            + (self / 256 % 256) * 65536
            + (self / 65536 % 256) * 256
            + (self / 16777216 % 256)
    }
}

impl FlipEndiannessU256 of FlipEndiannessTrait<u256> {
    fn flip_endianness(self: u256) -> u256 {
        (self % 0x100) * 0x100000000000000000000000000000000000000000000000000000000000000
            + (self / 0x100 % 0x100)
                * 0x1000000000000000000000000000000000000000000000000000000000000
            + (self / 0x10000 % 0x100)
                * 0x10000000000000000000000000000000000000000000000000000000000
            + (self / 0x1000000 % 0x100)
                * 0x100000000000000000000000000000000000000000000000000000000
            + (self / 0x100000000 % 0x100)
                * 0x1000000000000000000000000000000000000000000000000000000
            + (self / 0x10000000000 % 0x100)
                * 0x10000000000000000000000000000000000000000000000000000
            + (self / 0x1000000000000 % 0x100)
                * 0x100000000000000000000000000000000000000000000000000
            + (self / 0x100000000000000 % 0x100)
                * 0x1000000000000000000000000000000000000000000000000
            + (self / 0x10000000000000000 % 0x100)
                * 0x10000000000000000000000000000000000000000000000
            + (self / 0x1000000000000000000 % 0x100)
                * 0x100000000000000000000000000000000000000000000
            + (self / 0x100000000000000000000 % 0x100)
                * 0x1000000000000000000000000000000000000000000
            + (self / 0x10000000000000000000000 % 0x100)
                * 0x10000000000000000000000000000000000000000
            + (self / 0x1000000000000000000000000 % 0x100)
                * 0x100000000000000000000000000000000000000
            + (self / 0x100000000000000000000000000 % 0x100)
                * 0x1000000000000000000000000000000000000
            + (self / 0x10000000000000000000000000000 % 0x100)
                * 0x10000000000000000000000000000000000
            + (self / 0x1000000000000000000000000000000 % 0x100)
                * 0x100000000000000000000000000000000
            + (self / 0x100000000000000000000000000000000 % 0x100)
                * 0x1000000000000000000000000000000
            + (self / 0x10000000000000000000000000000000000 % 0x100)
                * 0x10000000000000000000000000000
            + (self / 0x1000000000000000000000000000000000000 % 0x100)
                * 0x100000000000000000000000000
            + (self / 0x100000000000000000000000000000000000000 % 0x100)
                * 0x1000000000000000000000000
            + (self / 0x10000000000000000000000000000000000000000 % 0x100)
                * 0x10000000000000000000000
            + (self / 0x1000000000000000000000000000000000000000000 % 0x100)
                * 0x100000000000000000000
            + (self / 0x100000000000000000000000000000000000000000000 % 0x100)
                * 0x1000000000000000000
            + (self / 0x10000000000000000000000000000000000000000000000 % 0x100)
                * 0x10000000000000000
            + (self / 0x1000000000000000000000000000000000000000000000000 % 0x100)
                * 0x100000000000000
            + (self / 0x100000000000000000000000000000000000000000000000000 % 0x100)
                * 0x1000000000000
            + (self / 0x10000000000000000000000000000000000000000000000000000 % 0x100)
                * 0x10000000000
            + (self / 0x1000000000000000000000000000000000000000000000000000000 % 0x100)
                * 0x100000000
            + (self / 0x100000000000000000000000000000000000000000000000000000000 % 0x100)
                * 0x1000000
            + (self / 0x10000000000000000000000000000000000000000000000000000000000 % 0x100)
                * 0x10000
            + (self / 0x1000000000000000000000000000000000000000000000000000000000000 % 0x100)
                * 0x100
            + (self / 0x100000000000000000000000000000000000000000000000000000000000000 % 0x100)
    }
}

impl FlipEndiannessU128 of FlipEndiannessTrait<u128> {
    fn flip_endianness(self: u128) -> u128 {
        (self % 0x100) * 0x1000000000000000000000000000000
            + (self / 0x100 % 0x100) * 0x10000000000000000000000000000
            + (self / 0x10000 % 0x100) * 0x100000000000000000000000000
            + (self / 0x1000000 % 0x100) * 0x1000000000000000000000000
            + (self / 0x100000000 % 0x100) * 0x10000000000000000000000
            + (self / 0x10000000000 % 0x100) * 0x100000000000000000000
            + (self / 0x1000000000000 % 0x100) * 0x1000000000000000000
            + (self / 0x100000000000000 % 0x100) * 0x10000000000000000
            + (self / 0x10000000000000000 % 0x100) * 0x100000000000000
            + (self / 0x1000000000000000000 % 0x100) * 0x1000000000000
            + (self / 0x100000000000000000000 % 0x100) * 0x10000000000
            + (self / 0x10000000000000000000000 % 0x100) * 0x100000000
            + (self / 0x1000000000000000000000000 % 0x100) * 0x1000000
            + (self / 0x100000000000000000000000000 % 0x100) * 0x10000
            + (self / 0x10000000000000000000000000000 % 0x100) * 0x100
            + (self / 0x1000000000000000000000000000000 % 0x100)
    }
}
