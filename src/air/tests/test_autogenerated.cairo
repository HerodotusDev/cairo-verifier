use core::array::ArrayTrait;
use cairo_verifier::{
    air::{
        autogenerated::{eval_composition_polynomial_inner, eval_oods_polynomial_inner},
        constants::{
            MASK_SIZE, N_CONSTRAINTS, NUM_COLUMNS_FIRST, NUM_COLUMNS_SECOND, CONSTRAINT_DEGREE
        },
        global_values::{GlobalValues, EcPoint},
    },
    tests::stone_proof_fibonacci,
};

// test data from cairo0-verifier keccak-native run on stone-prover generated proof
#[test]
#[available_gas(9999999999)]
fn test_eval_composition_polynomial_inner() {
    let oods_values = stone_proof_fibonacci::stark::oods_values::get();
    let mask_values = oods_values.span().slice(0, oods_values.len() - 2);

    assert(mask_values.len() == MASK_SIZE, 'Invalid value');

    let constraint_coefficients = stone_proof_fibonacci::constraint_coefficients::get();

    assert(constraint_coefficients.len() == N_CONSTRAINTS, 'Invalid value');

    let point = 0x295db9e6b36bd5b5d2591d7d76a57e241821fd478b9f667778f0a09960d3a0f;
    let trace_generator = 0x4768803ef85256034f67453635f87997ff61841e411ee63ce7b0a8b9745a046;

    let global_values = GlobalValues {
        // Public input.
        trace_length: 0x40000,
        initial_pc: 0x1,
        final_pc: 0x5,
        initial_ap: 0x25,
        final_ap: 0x68,
        initial_pedersen_addr: 0x6a,
        initial_rc_addr: 0x1ea,
        initial_bitwise_addr: 0x9ea,
        rc_min: 0x7ffa,
        rc_max: 0x8001,
        // Constants.
        offset_size: 0x10000,
        half_offset_size: 0x8000,
        pedersen_shift_point: EcPoint {
            x: 0x49ee3eba8c1600700ee1b87eb599f16716b0b1022947733551fde4050ca6804,
            y: 0x3ca0cfe4b3bc6ddf346d49d06ea0ed34e621062c0e056c1d0405d266e10268a
        },
        // Periodic columns.
        pedersen_points_x: 0x347c3b5a473a369fe0dff299f20584e10d90a74d02c860f2c05405a0962380e,
        pedersen_points_y: 0x6da3790bceac8aa7c3ee46dff8a34b1eeff45f5d4b5a5e60f07caab341d9040,
        // Interaction elements.
        memory_multi_column_perm_perm_interaction_elm: 0x46ecc57b0b528c3dde60dbb870596694b2879c57d0b0a34ac1122ebea470a8d,
        memory_multi_column_perm_hash_interaction_elm0: 0x207a232fb05d8c8261c44be98177c09634d23e7aaaf4838d435a4423e3a025f,
        rc16_perm_interaction_elm: 0x2984c71a0d0a47b1d9a406f6c7be890100941f67f5db0656970832e51d48ca6,
        diluted_check_permutation_interaction_elm: 0x7793f70cbb5b4ae3ac72e5bce7cd46d62cbe169227257e6925e5564e595ff88,
        diluted_check_interaction_z: 0x3c48e3094aeca888fe6781ad7594d14d7f88062bbe320c6d6913f44b116810,
        diluted_check_interaction_alpha: 0x1d7304763d588fc98a927959788ad2f21d76121918994f14fc417617e6e9747,
        // Permutation products.
        memory_multi_column_perm_perm_public_memory_prod: 0x222cf8713d938af4954d6e3c98921720e296d5e9d21d5cc9b562245a009af1d,
        rc16_perm_public_memory_prod: 0x1,
        diluted_check_first_elm: 0x0,
        diluted_check_permutation_public_memory_prod: 0x1,
        diluted_check_final_cum_val: 0x77236c66f48bc3c27dd07478f276be52b473a7ecbda1b8e6f672824e4627da9
    };

    assert(
        eval_composition_polynomial_inner(
            mask_values, constraint_coefficients.span(), point, trace_generator, global_values,
        ) == 0x245c787b658a0461241e840f1ffcf76ca5d29e6571e7a8edd80fdd968fddd45,
        'Invalid value'
    )
}

// test data from cairo0-verifier keccak-native run on stone-prover generated proof
#[test]
#[available_gas(9999999999)]
fn test_eval_oods_polynomial_inner() {
    let column_values = array![
        0x465cc38930fc5209ab9c13e30b61f166da9e900abfc26ac7ce2f840b121375a,
        0x574340d33431f3096eb4d2f2a7abf22d95e36ec938b6627269fef207b618241,
        0x7f1a146e05c096608ca7a7222a558776ba1e54551c23b13cd5b99477098b24a,
        0x2be63af1ebc4b5e711c5531eb3b3f5a52d26c5fc825a3460bcf39c8c3def44c,
        0xc1460285464e30adca071c213ae51fa7c06c3b53a5d8137ac9cd657c1af0d8,
        0x5b9f7c683cee3855ae9aa71e3d6177e0909f67fbcd45721f861f7c7780142f5,
        0x4208c4609b8535aa6d8016c971d0baaa41ae81fd757d52be5372aec063271c5,
        0x79cbd5d9008c17acc9db4a02c8a61c348b3321d8c5fcaa977052f721ca6331e,
        0x1ebf13deb07846470690aba50e67899c1b0d7879b0b4f80ae20e3ae8aac99c9,
        0x78c7aab3b9642278a45a46a5b3d8c084e15b863db7fc88b8b446831136325b0,
        0x29f2c6eb5bd093c9b6260c1070d21c6f96568681ecbd2a8e593fe88811c5cb3,
        0x1003d9936322ad4c6218fe18d906b9e6b70c2146685c27fbf7488644a65c0bd,
    ];
    assert(column_values.len() == NUM_COLUMNS_FIRST + NUM_COLUMNS_SECOND + 2, 'Invalid value');

    let oods_values = stone_proof_fibonacci::stark::oods_values::get().span();

    assert(oods_values.len() == MASK_SIZE + CONSTRAINT_DEGREE, 'Invalid value');

    let constraint_coefficients = array![
        0x1,
        0x72dee88e77d8c055579c4a61433e11efe9bfd337cbd7f2921e0289eecf5b3dd,
        0x5407254080c87a503ec3982ec47f599c1ac9ecb4287d2f833a336ba623df0,
        0x76bed0e72ba87bd8e5e9070994e58c4af28c53da22b3ed0cf30162655775b07,
        0x730c1269c566424be289e3a2270f5902d9f414a4bd3a8b35e32d1942f01128,
        0x7e7eda8607a457eec4db85bc6ac192ad98c3f2581b3ec041c0891eb2aa78c,
        0x2a0f0991caba8389dbf65d8e568c4736f9c37929faa1d89a359493fceebc678,
        0x1175f288ced0a9fe0e556a1184212c15506f71e7715ed9b9c627578d1cbef9a,
        0x62cf5e53585b02df69c77fb4c6351d3688c1feac3d5c693ec9f1240a4f5eacc,
        0x59a791e285fde54ea456c7a70853ffa14ea9ba2d688c68bc56891747989fab,
        0x21e515f9fd61cbbfcd87202ada6f7c7f8e8f623f54b70224ab41124be19974e,
        0x434fd994ef0b640cff8ff7d3078572e1c83d6588369a66289c2e04ce139ed8a,
        0x6d6cf1b1c15085ae01de41214231318914d95f20effafe3d96568d7701029a6,
        0x37bd6fefb1ab211170df858268b5ee6df4a8998685e27849dac33bbc640f531,
        0x24dce75885267786a015ce77f7248b3ae6a0c82d695da5ea1abccefdb8ff571,
        0x5cc8e8ffe73ac2024c70cc8d7dcba66d97285ec3ec1af5100f0c54bdfd304e,
        0x6a4fd281e45bd28ec8a1696dbbc1d1f1a0f61465889a8394c62514e6912542,
        0x4e86f2babb89acc00463c137628499c8f2f51138290ee27e468ea3d3c0589bf,
        0x3b0f0ce8e5be4b168af7b14c678e861aa0579611d7f9083ba0fc7f8876bb128,
        0x409dca461557554eaf4e70a5f74c52fb5460f0896d443af02f4625811449dc7,
        0x3cfa4ef1dc50d8324cc59bfdc0f731a97b2f1338ad4f420781f7b593714afa4,
        0x576c2b82010159b91e823b0ebecec7793da834c875008f90f5c5822d0e8fd1b,
        0x6b65e5033c372fef8bc10fa66bd972a0ed577e6547801ac0d0379a0dfec9c21,
        0x6d25e54c937cc8ae1f6e79bcac1f1abf32bd946da6d906e3339991a77a64f08,
        0x3e0fec5981eda794915df4a1c9b17c4ba991cee5b8b75fb05a654c1ca4058ea,
        0x37f4a17ebb057c9bfd29d54405e87a5dc573eda256f1f8cf9b7683e89759087,
        0xf637086b64bdd0ff5806a6b5a9183aeb2596afe092af1cd4cd17f0c45265d,
        0xf9e1c114f25f966e41a1099d7910574d145034c670c6c47b0c8c06a7b10ec6,
        0xb98caf6ac90a2db2be413a82e1384eb70654fe09784ef26ec9bd6974078995,
        0x4603ceb52efc3ef1e83a3babce290171138a862b096a1950096668504b60434,
        0xa8432130449cf0d17440a25068c144501af2a0dae225471324af90554138db,
        0x5e2ba735cb03c302f0964976ca7faff372205d9fe79c1f4d678a952affe7c92,
        0x7594e3859664881552a5f643c7145e4edac92326c8f1a6d3765eac3168f8618,
        0x57466856e5f98912e2ebf6f97d33ec5480527bafa41c5dff0e7022b5275cafe,
        0x5d3304284c1a760fea823062c1a477e1edfdd490c873176cd8d6933a06a80d,
        0x77986cd6e98a77f084519b2b361117cc7249af9172c09a272df53cf3ebced4a,
        0x4a8da534fd84998233b6c36f56ef8945767c2e6301087807f90f521070bd89,
        0x2d50b8e37261a0c86a0c0eb0aaf14a09ed7958d249d217d8f6369561f2c6ee8,
        0x118a4a2125bb44c78e12f52dbd8e6948e66b047369597b21982bc529b6a1947,
        0x75c73b587b0d932865f70b4cc0d9b81f041c46217beecf514839231265e987a,
        0x590183ab520efa35c0c6193295f5e296ea20e8a75b70f9135fc98d95fd2313f,
        0x741786cf9ed2d11af8b37bbae63eccdc14b0896ee3cf9e889c8a139ff00d56c,
        0x5e2ee7e34fde305a8adb5c5264d87dd6d4b970b3b71939e585dac3e7d3c16a7,
        0x643d33bb3c2597b1ee00c123f9112337aac4235e70ea83d833d21edb50de9f0,
        0x342a48ace5053aef4aed83d09a25f2253053aa5118d9302f9809397f0fb5efb,
        0x1dfb90f7fc485ad9bd6122bae398d1c7e4bf0dce4ca3b47e249a6444a32cc4f,
        0x2a611dd0e19fc7f0f505d0ba754d0c92c5404fc5440c2e9a1ef6b0c4cbc5a78,
        0x5610ea430c043f198898470e279614c659bf3aac5ec7043714d0d6a3c1837ba,
        0x9ffbf4da715c575a8f0a1e640ec38f8ceba6b7f12e0ebd063ea0daeb4d9da4,
        0x261025c5ee7bd6b63f72f9e76785732d0f3c4ba4bd2cf9174f93650f542ce5d,
        0x627898d4a57f9e27687e1653df069cb45281b48bc5362c3a7f44d4636b9cea2,
        0x5972324c2b7121d75435819900a4795ceace865772e1afb77a5bb8bb6ae0009,
        0xf0bd46ec38a1f14ef5c3a96ee05e1026eb93469f3ecf790d3ad4a9588d0f6d,
        0x4198f3b59a172dae1264c562423d8d32f07285831fe7d329a182b82367857df,
        0x67faf727751602d5e7cca400560039c70d47e3c70e5fefe65a60f832fe3a069,
        0x1afea1dd74346a1ca147e07dd661adcfd400ffe1481a74b46f6e2d725f80c4b,
        0x5c033341b7ad3a2452c6e757c5f7ae0b393f919b45c43421ad1dfd5491e97c8,
        0x68bb2aefafef5e20e91be06308c90f1b4520dfe10382fb5e6e44b1549d92f78,
        0x649d3e1f7946df7db63788ea6d197830a67c383c584b70955d2743b896fbb64,
        0x5dd3baa2a75971672eacaba095a9346e34fa2b145ff2ac0d5b125b486a4e2e9,
        0x4ef4ebca1a210bdd5e356ee2589e9dc77ddb5983a3387481f772397807f63bb,
        0xa72436f152e7fa40babbc0cd86a72d57e7f7cde406de125d513cf70dce8c31,
        0x2bab09c9fe10d67b86a4781e975fbffdbedd3bd950c93a3531a4ae79a979bd8,
        0x31b17ec0b68b4a0023f1c090a6e11212bdde940f8301fb01148fec7d609f951,
        0x49de0a9bea5294cb2aa83e6ca400122cddfd063e378bd55c63e0f1662ec5fbc,
        0x6c8127cf275bdf2e67fcea0696239b95c4313e3884806c0f300e2986e24d4e7,
        0x5c93e34fd8777a9dd92a5a46c6212817c71260ed60c37e6069c5b1d659b5bf,
        0x5edca068d18ec1153afd4e33777d176323a52de7ad6c9a0154985ba5ae3d97a,
        0x45435bef6069d5b898a412b6219f9f2979163dfc942936af554ee08d25f93d8,
        0x766e92c56b355f04e299defc8974aa38160c819424fcaf6773c33d7d4006470,
        0x59b207365353eb41d518bf47014ee06975c22ee7fd3dcfe08e988e84712738b,
        0x6024dd3f17165a71c2adc2b2c0eddc3b27c76e68206202264318c3061a0afe2,
        0x4cbfb7c370f8f87b54579ab45cd7999181f1247835dc6e389e126224fadda0,
        0x6f3694086acef1ea51e2cdc0dc20c90cc698d9f936459ed545510bf9ec2af9f,
        0x1ed83fb7353932a1ec36faacf794c1732c207c370b7b15eeabb92d8879091bf,
        0xaae70f0c2f14c65b4436ec1cbad4d48816510c45965f7ea78f813e5bd0d06d,
        0xb05ae02b4f6278649b0b8a3297f790b3c054ac1b1327ef492573be804c3f23,
        0x2a8a3a59fba53d308215153d044cfc643bf65bb20d8b618078b380c21e518c2,
        0x2ce2cabff680b283c08c5b2b755c455a9ca7cb0192d555367678af9c6d14b2a,
        0x3fd885cb197d8c05117c181fd9997e0eaa3cc6b5576e3bfc05203501a10e37d,
        0x1b8a6b3346e34a0c71cd4f13fb511aa257f92389119cc0774b83e2b9195d200,
        0x402b16107e08414da75860871b071660c6fc7308f26ae30acc2b9f66bfcd2fc,
        0x6a8be0236aa075438aada8e4fc2739c8ceef227ba0c782304927e8710cfaa08,
        0x7eecfa6834074b291a5189f7c749e4c905ffeba00c2161c195496d398d0333e,
        0x17a44e861a61f5b098152fa2da18c665faa501947130c054a99cda31c44621f,
        0x3f9ff2750027ccc08af0ca84eaccce13cc9d371a5b73c5fbe33f12e2a2709b1,
        0x41acf3a8bb441e83ef3b8c24ca5a2ab1d963bac6c2ba4fcd69a8fe9c3df3ca0,
        0x43cdbdc3bd56ae17441027027ea03403a98737f93629c8ede91dd640e65945,
        0x31d89e1632154261200d85252072222b3ebf43e633e0c77be4706125210a549,
        0x560ee12b9be455ec89ddd8a9e499c2ee445aee241355abf55e6cff448f4669c,
        0x579b601b281c0e83f7ce1e0bf1d851865f62282777b657ea15bfdf64652db7f,
        0x151efc647fa24490b0b31378276895e7894bda6ef48357cefd2394d80a67fce,
        0x2ebbc5252afa730020a98d7e0a0e0efac768275a7dcaa1110059f373297147e,
        0x7955ce18bba0b2dcd22e9b673ddeab9902b6401201cb39743466a1b8545468a,
        0x74caec3d453dd21a7dd297975e963d3930c7c823ea3850d5401a4da0e6251c5,
        0x4e71f8c0f21e8918777bf96be0aa3808957601a9bddeb48d3a7ee63b4b3e4e9,
        0x77b2206bbdd62c2babd86d9dac63a62579701afd9a04ab1f1c2bbfbba75511b,
        0x3fb9c135f74c9cd6dd2e86afb370c5f791d13911d45729a6f84614b4bbebcf2,
        0x5c5934ccd66802cd8d944906d607573fbd66ce49feb9149ae7cb1d17bd4eb61,
        0xa6f27c01713cdf4cdd9666efaf13db732d8281c7dd5d9d33d978d3cfd27b45,
        0x47ecb33aff0120c167ac0c5e235776963fdffcad1d62fdf5e67763f41226604,
        0x6f0855746b1e02d0e0a67f99b8879dd1458565f615fd2391efe910add6e9921,
        0x519efb763c11f0f307c6f2ea12b2c00387af05246505d7474743412daad5b4b,
        0xf4dbaf812c1f916360334960996bca0fc477cde4c3e8ccae806d887da3a6aa,
        0x785b28b1c1267e16deafac0280382f68867ecdbd180ee6b0a1b8af85b5c7e01,
        0x2a2500147d114e38910f17873e0618ba7d185555c1b229a9e5fdfb242b5f4d8,
        0x7c33aaf399390f2cad2a3deaa9c5f27611f9cf48e1ebaca3bebc5da4255a8b1,
        0x49697dc3b71f0843cfee83342f822788223342056ca5e6acf79f55a14c13d4f,
        0x6fa49aa74a5cbd47fbef4d6539854af2eaefdb2cb1e85460364f19ddae50d15,
        0x210ee50a67077338f0a85536b354316dddeb97e0785bb64db7274ebd8585ef1,
        0x3e17635aa0b131f7202991d70c6e5c7d2b81b5533ecfb0f2cc0b938a8c1752c,
        0x3ea01277662ca0d6a23618777705558661b1f5ea0124476cd90215cf51894c8,
        0x66d58de7e95ca2a983555c3696e5ff385b151c219738eaa0203fbe85fb968d0,
        0x50f3dabbb3fc7eb03d976cc16c389e952e0aceb936e4f37e1f2a9a4074187f4,
        0x3cac85df32d1aeab3354f87da4859a8f966af2b9250351c3793c08c99d5210b,
        0xead1fa23d3366c384b6cde0be00453909313dc9f13153d6383f7fdd607e5a0,
        0x46e9b7905af0b522c4634a239a9d44f7ea2ee2cf4083629711e3767d69106b,
        0x52083a259003c124cbbc1a0ad663a0615e7ebf32591fb26d0d087df5de3255f,
        0xb1d2b60782351d8351339a93360afdd073ee468006d8b54a0287ed3ae71264,
        0x67a8631ba50876e13b2e7f6cec4b1bb1dfd7f21ffc069cde5ace72547318b18,
        0x444c40553657036980ee79ee6c5dc5bfff83c9c485da166785fe3008ce65d61,
        0x2a28c984e787ade51ef6b3c6252422b6cd25b3e05a5ef0c279c474cfc624ea0,
        0x4c6d5aeea7f478e0e2389c1ba5d65b7dd8b1058217a26cb5d6c3a5b2e98aa2e,
        0x358bf0d97945dd951441ad716c10e10b98703abb2672f108cf7faf6a1f02632,
        0x490decc7ec793cb4913452a4ad04d6da33aae919bcd85752cdd0d60ed61ae53,
        0x5e5b3916e0050242d8dcf649c87612bd1797d5ccd0f912a89ddf1f3ec728bbc,
        0x6683b458297e84380149198f85a337092a06f06ca76d94d6ad03115792916a8,
        0x373d59b6aba0e90f9f4051174f17dd75f5d4d700eb170c44b7a766617e31d20,
        0x18de6b6e56e09e8d6ab9abe0dd5277b3f753ae60d673292b678a77e14f2bea7,
        0x19b2eb3410f7f9eca56582999fb6703485c244a311b2433e4c6b9e788aabe8c,
        0x6952d2c63f42766e96e2eb3c3072ff08d19ba88501181ac8906e0105341b211,
        0x3e6c3b165a5124c12aa92a8024ee35a21702fb7edf33097f50e5d1d35008db6,
        0x4fc3d979d8c4de6a949b1b35c99e7c704faf8f5a81ab2fd5a0102c9340c4de5,
        0x732da191961f02806365bcf361974f6230a46725af95af485d9df03caaef32,
        0x62e58e63775277094b3a3c20a52ba1bf206da70eea6a79c56a395df5d6b3c22,
    ];
    assert(constraint_coefficients.len() == MASK_SIZE + CONSTRAINT_DEGREE, 'Invalid value');

    let point = 0x27b6342139b5ab8f1ff29fea7f5602d3a438163f5547d2d341a5418ea90abe4;
    let oods_point = 0x295db9e6b36bd5b5d2591d7d76a57e241821fd478b9f667778f0a09960d3a0f;
    let trace_generator = 0x4768803ef85256034f67453635f87997ff61841e411ee63ce7b0a8b9745a046;

    assert(
        eval_oods_polynomial_inner(
            column_values.span(),
            oods_values,
            constraint_coefficients.span(),
            point,
            oods_point,
            trace_generator,
        ) == 0x6fc35a853a3d0fc4366b11ca6f274ff18c7ebe7f9c82780b5d0030efb7c9c31,
        'Invalid value'
    )
}
